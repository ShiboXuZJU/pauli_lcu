name: Publish Python TestPyPI
# on: push
on:
  push:
  workflow_call:

jobs:
  build:
    name: Build distribution
    runs-on: ${{ matrix.os_dist.os }}
    strategy:
      fail-fast: false
      matrix:
        os_dist:
          # linux
          # - {os: ubuntu-latest, dist: cp38-manylinux_x86_64}
          - {os: ubuntu-latest, dist: cp39-manylinux_x86_64}
          - {os: ubuntu-latest, dist: cp310-manylinux_x86_64}
          - {os: ubuntu-latest, dist: cp311-manylinux_x86_64}
          - {os: ubuntu-latest, dist: cp312-manylinux_x86_64}
          # macos
          # - {os: macos-latest, dist: cp38-macosx_arm64, macosarch: arm64}
          - {os: macos-latest, dist: cp39-macosx_arm64, macosarch: arm64}
          - {os: macos-latest, dist: cp310-macosx_arm64, macosarch: arm64}
          - {os: macos-latest, dist: cp311-macosx_arm64, macosarch: arm64}
          - {os: macos-latest, dist: cp312-macosx_arm64, macosarch: arm64}
    env:
      CIBW_BUILD: "${{ matrix.os_dist.dist }}"
      CIBW_ARCHS_MACOS: "${{ matrix.os_dist.macosarch }}"
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
      - name: Install build tools
        run: |
          python3 -m venv .venv
          source .venv/bin/activate
          python3 -m pip install --upgrade pip
          python3 -m pip install build cibuildwheel~=2.20.0
      - name: Build a binary wheel
        run: |
          source .venv/bin/activate
          python3 -m cibuildwheel --print-build-identifiers
          python3 -m cibuildwheel --output-dir dist
      - name: Build source tarball
        run: |
          source .venv/bin/activate
          python3 -m build --sdist
      - name: Store the distribution packages
        uses: actions/upload-artifact@v3
        with:
          name: python-package-distributions
          path: dist/

  # publish-to-pypi:
  #   name: Publish Python distribution to PyPI
  #   if: startsWith(github.ref, 'refs/tags/')
  #   needs:
  #     - build
  #   runs-on: ubuntu-latest
  #   environment:
  #     name: pypi
  #     url: https://pypi.org/p/pauli_lcu
  #   permissions:
  #     id-token: write  # IMPORTANT: mandatory for trusted publishing
  #   steps:
  #   - name: Download all the dists
  #     uses: actions/download-artifact@v3
  #     with:
  #       name: python-package-distributions
  #       path: dist/
  #   - name: Publish distribution to PyPI
  #     uses: pypa/gh-action-pypi-publish@release/v1

  # publish-to-test-pypi:
  #   name: Publish Python distribution to TestPyPI
  #   # if: startsWith(github.ref, 'refs/tags/')  # only publish to PyPI on tag pushes
  #   needs:
  #     - build
  #   runs-on: ubuntu-latest
  #   environment:
  #     name: testpypi
  #     url: https://test.pypi.org/p/pauli_lcu
  #   permissions:
  #     id-token: write
  #   steps:
  #     - name: Download all the dists
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: python-package-distributions
  #         path: dist/
  #     - name: Publish distribution to TestPyPI
  #       uses: pypa/gh-action-pypi-publish@release/v1
  #       with:
  #         repository-url: https://test.pypi.org/legacy/
